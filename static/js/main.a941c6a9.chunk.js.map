{"version":3,"sources":["components/Searchbar.js","components/ImageGalleryItem.js","components/ImageGallery.js","components/Modal.js","App.js","index.js"],"names":["Searchbar","props","className","onSubmit","event","preventDefault","queue","target","value","type","autoComplete","autoFocus","placeholder","ImageGalleryItem","webformatURL","map","ImageURL","src","alt","largeImageURL","onClick","toggle","id","KEY","ImageGallery","useState","page","setPage","setWebformatURL","loading","setLoading","api","fetch","then","res","json","webformat","hits","finally","window","scrollTo","top","document","documentElement","scrollHeight","behavior","error","console","log","useEffect","length","StrictMode","color","height","width","timeout","getLargeImd","modalRoot","querySelector","Modal","addEventListener","toggleModal","removeEventListener","e","code","createPortal","currentTarget","largeImg","App","setQueue","showModal","setShowModal","setLargeImg","undefined","q","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.a941c6a9.chunk.js","sourcesContent":["export default function Searchbar (props) {\r\n\r\n   function readInput(event) {\r\n        event.preventDefault();\r\n        props.queue(event.target[1].value);\r\n    }\r\n\r\n        return (\r\n            <header className=\"Searchbar\">\r\n                <form className=\"SearchForm\" onSubmit={readInput}>\r\n                    <button type=\"submit\" className=\"SearchForm-button\">\r\n                        <span className=\"SearchForm-button-label\">Search</span>\r\n                    </button>\r\n                    <input\r\n                        className=\"SearchForm-input\"\r\n                        type=\"text\"\r\n                        autoComplete=\"off\"\r\n                        autoFocus\r\n                        placeholder=\"Поиск изображений и фотографий\"\r\n                    />\r\n                </form>\r\n            </header>\r\n        )\r\n}\r\n","export default function ImageGalleryItem (props) {\r\n  \r\n        return (\r\n            props.webformatURL.map(ImageURL => \r\n                <li className=\"ImageGalleryItem\" key={ImageURL.id}>\r\n                    <img src={ImageURL.webformatURL} alt={ImageURL.largeImageURL} className=\"ImageGalleryItem-image\" onClick={props.toggle}/>\r\n                </li>\r\n            ))\r\n}\r\n","import ImageGalleryItem from './ImageGalleryItem';\r\nimport React, { useState, useEffect} from 'react';\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nconst KEY = '23099415-b292849e49f5632c41c65f5ef';\r\n\r\nfunction ImageGallery(props) {\r\n\r\n    const [page, setPage] = useState(1);\r\n    const [webformatURL, setWebformatURL] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    \r\n    useEffect(() => {\r\n\r\n        if (props.queue) {\r\n            setLoading(true);\r\n            setPage(1);\r\n            setWebformatURL([]);\r\n            api(props.queue);\r\n            setPage(page + 1);\r\n        }\r\n\r\n        }, [props.queue]);\r\n    \r\n    const handleOnClick = () => {\r\n        setPage(page + 1);\r\n        api(props.queue);\r\n    }\r\n\r\n    function api(queue = '') {\r\n        \r\n        setLoading(true);\r\n        try {\r\n            fetch(`https://pixabay.com/api/?q=${queue}&page=${page}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`)\r\n                .then(res => res.json())\r\n                .then(webformatURL => {\r\n                    \r\n                    setWebformatURL(webformat => [ ...webformat, ...webformatURL.hits]); \r\n                })\r\n                .finally(() => {\r\n                    setLoading(false);\r\n\r\n                    window.scrollTo({\r\n                    top: document.documentElement.scrollHeight,\r\n                    behavior: 'smooth',\r\n                    });\r\n                }\r\n            )       \r\n        }\r\n\r\n        catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n\r\n    }\r\n  \r\n    if (loading && webformatURL.length === 0) {\r\n                \r\n        return (<React.StrictMode>\r\n                    <Loader\r\n                    type=\"Puff\"\r\n                    color=\"#00BFFF\"\r\n                    height={100}\r\n                    width={100}\r\n                    timeout={3000} //3 secs\r\n                    className=\"loader\"\r\n                />                    \r\n            </React.StrictMode>\r\n        );\r\n    }\r\n\r\n    if (props.queue) {\r\n            return (<React.StrictMode>\r\n                <ul className=\"ImageGallery\">\r\n                    {<>\r\n                            <ImageGalleryItem webformatURL={webformatURL} toggle={props.toggle} getLargeImd={props.getLargeImd} />\r\n                    </>\r\n              \r\n                    }\r\n                </ul>\r\n\r\n                {loading === true\r\n                    ? <Loader\r\n                    type=\"Puff\"\r\n                    color=\"#00BFFF\"\r\n                    height={100}\r\n                    width={100}\r\n                    timeout={3000} //3 secs\r\n                    className=\"loader\"\r\n                /> \r\n                    \r\n                    : <button type='button' className=\"Button\" onClick={handleOnClick}>Загрузить больше...</button>\r\n                }\r\n            </React.StrictMode>\r\n        )       \r\n    }\r\n\r\n    if (!loading) {\r\n        return (\r\n        <div>     \r\n        <p>К сожалению, тут пока что ничего нет...</p>\r\n        </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default ImageGallery;","import { useEffect } from 'react';\r\nimport { createPortal } from 'react-dom';\r\n\r\nconst modalRoot = document.querySelector('#modal__root');\r\n\r\nexport default function Modal (props) {\r\n\r\n\r\n    useEffect(() => { window.addEventListener('keydown', toggleModal) })\r\n        \r\n    useEffect(() => { window.removeEventListener('keydown', toggleModal) })\r\n\r\n   const toggleModal = e => {\r\n        if (e.code === 'Escape') {\r\n            props.toggle();\r\n        }    \r\n    }\r\n\r\n    const toggleModalOverlay = e => {\r\n        if (e.target === e.currentTarget) {\r\n            props.toggle();\r\n        }\r\n    }\r\n\r\n        return createPortal(\r\n            <div className=\"Overlay\" onClick={toggleModalOverlay}>\r\n            <div className=\"Modal\">\r\n                    <img src={props.largeImg} alt=\"\" />\r\n            </div>\r\n        </div>\r\n        , modalRoot)\r\n    \r\n}","import Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport { useState } from 'react';\nimport Modal from './components/Modal';\n\n\n\nfunction App() {\n\n  const [queue, setQueue] = useState('');\n  const [showModal, setShowModal] = useState(false);\n  const [largeImg, setLargeImg] = useState('');\n\n  const handleQueue = (q = '') => {\n    setQueue(q);   \n  }\n\n  const toggleModal = (e) => {\n    setShowModal(!showModal);\n\n    if (showModal === false && e !== undefined) {\n      setLargeImg(e.target.alt);\n    }\n  }\n\n    return (\n      <div className=\"App\">\n        {showModal && <Modal toggle={toggleModal} largeImg={largeImg} />}\n        <Searchbar queue={handleQueue} />\n        <ImageGallery queue={queue} toggle={toggleModal} />  \n      </div>\n      \n\n  );\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}